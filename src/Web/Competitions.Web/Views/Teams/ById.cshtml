@using Competitions.Data.Models
@using Competitions.Domain.BL.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@using Competitions.Common
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ICustomersService _customersService
@model Competitions.Web.ViewModels.Team.TeamViewModel

@{
    ViewData["Title"] = $"Отбор {@Model.Name}";
    ViewData["Keywords"] = $"Състезание,Състезателен Отбор,Отбор,{@Model.Name},Competitions";
    ViewData["Description"] = $"Отбор {@Model.Name}";
    
    bool IsCreatorOrAdmin(string creatorCustomerId)
    {
        var currentUser = UserManager.GetUserAsync(User).GetAwaiter().GetResult();
        var creatorId = _customersService.GetCustomerId(currentUser.Id);
        return creatorId == creatorCustomerId || IsAdmin();
    }
    
    bool IsAdmin()
    {
        var user = UserManager.GetUserAsync(User).GetAwaiter().GetResult();
        var userRoles = UserManager.GetRolesAsync(user).GetAwaiter().GetResult();
        return userRoles.Any(r => r == GlobalConstants.AdministratorRoleName);
    }
}

<div>
    <h1 class="text-center">
        Отбор @Model.Name
        
        
        @if (SignInManager.IsSignedIn(User) && IsCreatorOrAdmin(@Model.CreatorCustomerId))
        {
            <a class="page-link-green" asp-controller="Competitions" asp-action="Modify" asp-route-id="@Model.Id" title="Промени състезанието">
                <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
            </a>
            <a class="page-link-red" asp-controller="Competitions" asp-action="Delete" asp-route-id="@Model.Id" title="Изтрий състезанието">
                <i class="fa fa-trash-o" aria-hidden="true"></i>
            </a>
        }
    </h1>
    <div>
        <div><h4>Брой регистрирани членове:</h4> @Model.Participants.Count</div>
    </div>
</div>